# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build .NET App

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  
jobs:
  build:

    # When the workflow runs, this is the name that is logged
    # This job will run three times, once for each "os" defined
    name: build-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    if: ${{ github.ref == 'refs/heads/master' }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1.2
      
    - name: Restore Nuget Packages
      run: nuget restore PCI.KittingApp.sln
    
    - name: Build the Solution
      run: msbuild PCI.KittingApp.sln /p:Configuration=Release
    
    - name: VSTest
      run: vstest.console.exe ./PCI.KittingApp.Test/bin/Release/PCI.KittingApp.Test.dll /Platform:x64
      
    - name: Install Versionize
      run: dotnet tool install --global Versionize
      
    - name: Setup git
      run: |
        git config --local user.email "isnaen70@gmail.com"
        git config --local user.name "zulfikar4568"
        
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Versionize Release
      id: versionize
      run: versionize --changelog-all --exit-insignificant-commits
      continue-on-error: true
      
    - name: No release required
      if: steps.versionize.outcome != 'success'
      run: echo "Skipping Release. No release required."
      
    - name: Push changes to GitHub
      if: steps.versionize.outcome == 'success'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        tags: true
        
    - name: "Create release"
      if: steps.versionize.outcome == 'success'
      uses: "actions/github-script@v5"
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
        script: |
          try {
            const tags_url = context.payload.repository.tags_url + "?per_page=1"
            const result = await github.request(tags_url)
            const current_tag = result.data[0].name
            await github.rest.repos.createRelease({
              draft: false,
              generate_release_notes: true,
              name: current_tag,
              owner: context.repo.owner,
              prerelease: false,
              repo: context.repo.repo,
              tag_name: current_tag,
            });
          } catch (error) {
            core.setFailed(error.message);
          }

  assembly_tags:
    name: build-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    needs: [build]
    if: ${{ github.ref == 'refs/heads/master' }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
    - uses: actions/checkout@v3

    - name: "Get Current Tag"
      id: current_tag
      uses: "actions/github-script@v5"
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
        script: |
            const tags_url = context.payload.repository.tags_url + "?per_page=1"
            const result = await github.request(tags_url)
            const tag = result.data[0].name.toString()
            const no_v = tag.replace('v', '')
            core.setOutput('tag', tag)
            core.setOutput('no-v', no_v)

    - name: Set version in all AssemblyInfo.cs files
      uses: secondbounce/assemblyinfo-update@v2
      with:
        version: ${{ steps.current_tag.outputs.no-v}}

    - name: Commit changes
      uses: EndBug/add-and-commit@v9
      with:
        author_name: M. Zulfikar Isnaen
        author_email: isnaen70@gmail.com
        message: 'chore(release): ${{ steps.current_tag.outputs.tag }}'
        add: '*.cs'
        pull: '--rebase --autostash ...'

    - name: Push changes to GitHub
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        tags: true